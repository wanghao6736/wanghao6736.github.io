<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>常用系统命令总结</title>
    <link href="/2021/08/27/Common-Commands-Summary/"/>
    <url>/2021/08/27/Common-Commands-Summary/</url>
    
    <content type="html"><![CDATA[<p><code>Linux</code>系统和<code>Windows</code>系统下的常用<code>shell</code>命令汇总</p><span id="more"></span><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="Linux通用"><a href="#Linux通用" class="headerlink" title="Linux通用"></a>Linux通用</h2><h3 id="1-文件类"><a href="#1-文件类" class="headerlink" title="1.文件类"></a>1.文件类</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ls -lh <span class="hljs-comment"># 列出文件目录</span><br>rm [-rf] [file|dir] <span class="hljs-comment"># 删除文件/目录</span><br>cp <span class="hljs-comment"># 拷贝文件</span><br>mv <span class="hljs-comment"># 移动文件</span><br>mkdir [dir] <span class="hljs-comment"># 创建目录</span><br>cat [file] <span class="hljs-comment"># 查看文件</span><br>touch [file] <span class="hljs-comment"># 编辑文件，不存在则新建</span><br><span class="hljs-built_in">pwd</span> <span class="hljs-comment"># 显示当前所在目录</span><br>whoami <span class="hljs-comment"># 显示当前用户</span><br><span class="hljs-built_in">cd</span> ~/-/[dir] <span class="hljs-comment"># 跳转到用户目录/上一个使用的目录/dir目录</span><br>find [file] <span class="hljs-comment"># 查找文件</span><br>&gt; / &gt;&gt; [result.txt] <span class="hljs-comment"># 标准输出重定向，覆盖之前内容/附加模式（保留之前内容）</span><br></code></pre></div></td></tr></table></figure><h3 id="2-包管理"><a href="#2-包管理" class="headerlink" title="2.包管理"></a>2.包管理</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sudo apt install [pkg_name]<br></code></pre></div></td></tr></table></figure><h3 id="3-系统类"><a href="#3-系统类" class="headerlink" title="3.系统类"></a>3.系统类</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">su <span class="hljs-comment"># 切换到管理员模式</span><br>sudo [<span class="hljs-built_in">command</span>] <span class="hljs-comment"># 以管理员身份执行命令</span><br>su -u root -p <span class="hljs-comment"># 设置管理员密码</span><br><span class="hljs-built_in">echo</span> [content] <span class="hljs-comment"># 显示某一信息</span><br>df <span class="hljs-comment"># 检查硬盘剩余空间</span><br>du <span class="hljs-comment"># 检查目录所用空间</span><br>man [<span class="hljs-built_in">command</span>] <span class="hljs-comment"># 查看命令帮助信息</span><br>lpr <span class="hljs-comment"># 显示文件</span><br>cal <span class="hljs-comment"># 显示万年历</span><br><span class="hljs-built_in">which</span> [<span class="hljs-built_in">command</span>] <span class="hljs-comment"># 查询命令</span><br><span class="hljs-built_in">alias</span> [<span class="hljs-built_in">command</span>] <span class="hljs-comment"># 为命令取别名</span><br><span class="hljs-built_in">unalias</span> [name] <span class="hljs-comment"># 删除name别名</span><br>reboot <span class="hljs-comment"># 重启系统</span><br>shutdown <span class="hljs-comment"># 关机</span><br>mount/umount [device] [dir] <span class="hljs-comment"># 挂载/取消挂载device为dir目录</span><br><span class="hljs-built_in">history</span> <span class="hljs-comment"># 显示所有历史输入的命令</span><br>[<span class="hljs-built_in">command</span>] | grep [kw] <span class="hljs-comment"># 管道命令&quot;|&quot;将command执行的结果传给grep命令，grep再根据kw进行筛选</span><br></code></pre></div></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">aptitude <span class="hljs-comment"># 查看已安装的软件</span><br>apt list <span class="hljs-comment"># 查看已安装的软件</span><br>apt edit-sources <span class="hljs-comment"># 编辑源列表</span><br>apt [<span class="hljs-built_in">command</span>] <span class="hljs-comment"># 执行包管理命令，如：install、remove、update等</span><br></code></pre></div></td></tr></table></figure><h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">open [file] <span class="hljs-comment"># 打开文件/目录/软件</span><br>say [str] <span class="hljs-comment"># 语音朗读str</span><br>say -f demo.txt -o [file] <span class="hljs-comment"># 朗读demo，并将结果存储到file中</span><br></code></pre></div></td></tr></table></figure><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="1-文件类-1"><a href="#1-文件类-1" class="headerlink" title="1.文件类"></a>1.文件类</h2><ul><li>文件批量重命名</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ren *.jpg *.png <span class="hljs-comment"># 重命名jpg格式文件为png格式</span><br>ren *.* *.png <span class="hljs-comment"># 重命名所有格式文件为png格式</span><br><span class="hljs-built_in">cd</span> -d [dist] <span class="hljs-comment"># 目录跳转，使用-d参数支持跨盘符跳转</span><br></code></pre></div></td></tr></table></figure><ul><li>列出文件目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">dir [path] &gt; [dist]\dir.txt <span class="hljs-comment"># 列出path目录下的文件，并导出到dist目录下的dir.txt中</span><br></code></pre></div></td></tr></table></figure><h2 id="2-网络类"><a href="#2-网络类" class="headerlink" title="2.网络类"></a>2.网络类</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ipconfig -all <span class="hljs-comment"># 查看ip配置信息</span><br>ipconfig /flushdns <span class="hljs-comment"># 刷新系统DNS缓存</span><br>ping [ip] <span class="hljs-comment"># 检查网络连通性</span><br></code></pre></div></td></tr></table></figure><h2 id="3-通用类"><a href="#3-通用类" class="headerlink" title="3.通用类"></a>3.通用类</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cls <span class="hljs-comment"># 清屏</span><br><span class="hljs-built_in">exit</span> <span class="hljs-comment"># 退出</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>3DsMax 学习笔记</title>
    <link href="/2021/08/27/3DsMax-learning-note/"/>
    <url>/2021/08/27/3DsMax-learning-note/</url>
    
    <content type="html"><![CDATA[<p>用<code>3Ds Max 2021</code>重新学一遍<code>3D</code>建模，好好做笔记，本科做大创时学了2017版的使用，现在操作基本都忘了，总算是明白了记忆力是靠不住的。上手推荐<code>PAPAYA</code>电脑教室的教程-<a href="https://www.youtube.com/playlist?list=PL7enJ2-v6SPk3UTdiPlNnswxgT86n3P2B">YouTube</a> | <a href="https://www.bilibili.com/video/BV1eJ411N7hK">Bilibili搬运</a>，讲得专业又仔细，对新手太友好了</p><span id="more"></span><h1 id="3DsMax基本知识"><a href="#3DsMax基本知识" class="headerlink" title="3DsMax基本知识"></a>3DsMax基本知识</h1><h2 id="初始化设置"><a href="#初始化设置" class="headerlink" title="初始化设置"></a>初始化设置</h2><ol><li>更改项目文件夹</li><li>单位设置</li><li>首选项设置<ul><li>常规-场景撤销（建议设置100）</li><li>文件-自动备份（建议设置为1钟备份5个文件）</li></ul></li><li>自定义用户界面-高端用户☺</li></ol><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ol><li>归档-打包所有场景资源</li><li>视口操作<ul><li>视口最大化：<code>alt+W</code></li><li>视口移动：按住鼠标中键+拖动</li><li>视口缩放：滚动鼠标中键</li><li>视口绕<code>Gizmo</code>转动：alt`+鼠标中键+拖动</li><li>左视图：<code>L</code></li><li>顶视图：<code>T</code></li><li>前视图：<code>F</code></li><li>透视图：<code>P</code></li><li>正交视图：<code>U</code></li></ul></li><li>对象操作<ul><li>选择：<code>Q</code></li><li>移动：<code>W</code></li><li>旋转：<code>E</code></li><li>智能缩放：<code>R</code></li><li>变换操作时用数字作为输入：<code>F12</code></li><li>加选：<code>ctrl</code>+对象</li><li>减选：<code>alt</code>+对象</li><li>反选：选中对象时按<code>ctrl+I</code></li><li>全选：<code>ctrl+A</code></li><li>从场景中选择：<code>H</code></li><li>孤立选择对象：<code>alt+Q</code></li><li>隐藏对象：<code>alt+H</code></li><li>全部取消隐藏：<code>alt+U</code></li><li>快速对齐（对其对象的轴心）：<code>shift+A</code></li><li>捕捉开关：<code>S</code></li></ul></li></ol><div class="note note-primary">            <p>选择并放置命令和快速对齐命令都与对象的轴心位置有关，设置时需要根据实际情况调整对象的轴心位置后再使用，具体为：编辑-变化工具框-对齐轴，依次设置各个轴的位置，或者通过命令面板-层次面板-轴，来修改</p>          </div><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ol><li>新建场景：<code>ctrl+N</code></li><li>取消当前基本体模型的创建：<code>esc</code>或鼠标右键</li><li>最大化视口切换：<code>alt+W</code></li><li>模型最大化显示：<code>Z</code></li><li>部件组合：选中对象+<code>G</code></li><li>隐藏网格：选中视口+<code>G</code></li><li>基本体创建面板：<code>ctrl</code>+右键</li><li>半透明显示模型：<code>alt+X</code></li><li>显示对象网格：<code>F4</code></li><li>显示对象外框线：<code>shift+J</code></li><li>对象克隆：选中对象+<code>shift</code>+拖动</li><li>材质编辑器：<code>M</code></li><li>快速渲染当前视口：<code>shift+Q</code></li><li>创建摄像机：<code>ctrl+C</code></li></ol><div class="note note-info">            <p>使用快捷键时，确保输入法处于英文输入状态，否则快捷键可能不会生效</p>          </div><h2 id="3DsMax一般建模流程"><a href="#3DsMax一般建模流程" class="headerlink" title="3DsMax一般建模流程"></a>3DsMax一般建模流程</h2><ol><li>建立基本模型</li><li>材质指定</li><li>打设灯光</li><li>动画制作</li><li>创建摄像机-以特定角度观察模型</li><li>静帧渲染-照片</li><li>动画渲染-视频</li></ol><div class="note note-info">            <p>使用<code>Win10</code>系统时，如果渲染时<code>3Ds Max</code>主<code>UI</code>卡死，且已经排除系统内存不够的因素，则可能是因为<code>Win10</code>自带输入法与软件不兼容，到输入法设置中将其设置为使用以前的微软拼音输入法或直接使用第三方输入法可解决该问题</p>          </div><h1 id="建模方法和技巧"><a href="#建模方法和技巧" class="headerlink" title="建模方法和技巧"></a>建模方法和技巧</h1><h2 id="建模方法"><a href="#建模方法" class="headerlink" title="建模方法"></a>建模方法</h2><h3 id="1-布尔建模-模型加减"><a href="#1-布尔建模-模型加减" class="headerlink" title="1.布尔建模-模型加减"></a>1.布尔建模-模型加减</h3><p>在创建面板下，将标准基本体切换为复合对象即可调出布尔运算</p><ul><li>并集</li><li>交集</li><li>差集</li></ul><h3 id="2-样条线建模-平面到立体"><a href="#2-样条线建模-平面到立体" class="headerlink" title="2.样条线建模-平面到立体"></a>2.样条线建模-平面到立体</h3><ul><li>车削</li></ul><ol><li>先用样条线绘制出对象轮廓，然后选择样条线层级</li><li>在修改面板下找到轮廓选项，绘制封闭的平行样条线</li><li>添加车削修改器，设置对齐位置</li></ol><ul><li>挤出-挤出具有一定厚度的模型</li><li>倒角-在挤出修改器的基础上添加一定的倒角</li><li>编辑技巧<ul><li>切换样条线层级快捷键：1、2、3（顶点、线段、样条线）</li><li>进入顶级层级删除样条线，处于次级层级时并不会将样条线完全删除</li><li>使用挤出修改器后得到是一个空壳模型可能是因为样条线没有完全闭合</li><li>样条线编辑时可以按退格键<code>Backspace</code>撤销上一个点</li></ul></li></ul><div class="note note-info">            <ul><li>样条线画好后，记得右键转换为可编辑样条线，否则圆角等命令可能不起作用</li><li>修改器类似于相机中的滤镜，为模型添加一定的显示效果，不需要时可直接删除修改器而保持原有模型不变</li><li>使用车削修改器时，若添加修改器后模型显示黑色，则在修改器参数中勾选翻转法线，若模型底部有空洞，则在修改器参数中勾选焊接内核</li></ul>          </div><h3 id="3-多边形建模-点、线、面编辑"><a href="#3-多边形建模-点、线、面编辑" class="headerlink" title="3.多边形建模-点、线、面编辑"></a>3.多边形建模-点、线、面编辑</h3><ul><li>快速切换选择层级：数字键1、2、3、4等等</li><li>环选：选择一条线段后，按<code>alt+R</code>或环选键</li><li>循环选边：双击横向线段</li><li>点层级操作<ul><li>一个或两个点焊接：<code>ctrl+shift+W</code>或者右键选择目标焊接</li><li>多点焊接：右键选焊接，调节焊接阈值（点与点之间的距离小于阈值时进行焊接）</li><li>连接对角点：<code>ctrl+shift+E</code>或右键连接/剪切</li><li>删除废点：右键选择删除，用<code>delete</code>键或删除与点相连接的面</li></ul></li><li>边层级操作<ul><li>选择两条平行线，右键连接会在平行线间生成一条直线，打开设置窗口可以调节连接线的数量</li><li>调节边的弧度：右键切角命令</li><li>断开边：右键分割命令</li><li>连接边：选中一条边-右键焊接命令、选中两条边-右键桥命令</li><li>删除边：右键删除（删除线保留点）、<code>ctrl</code>+右键删除（删除线和点）</li><li>更改边为样条线：选择边后，右键选择或在右侧面板选择利用所选内容创建图形，再选择为要更改的类型</li></ul></li><li>边界层级操作<ul><li>边界封口：<code>alt+P</code>或右键封口</li></ul></li><li>面层级操作<ul><li>在面上插入面：右键插入（分组插入可以打开设置窗口进行设置）</li><li>将面挤出：<code>shift+E</code>或右键挤出</li><li>倒角：在挤出的基础上还可调节挤出面的轮廓大小，<code>shift+ctrl+B</code>或右键倒角</li></ul></li><li>元素层级操作<ul><li>元素渲染出反面时，可以选择翻转法线改为正面</li></ul></li><li>细分操作<ul><li>细分曲面（NURMS细分）：在模型上插入边，运算量随迭代次数成倍增加，不同布线方式细分结果不同</li><li>涡轮平滑修改器：相较于细分曲面效率更高，一般建模完成后用其代替细分曲面</li></ul></li><li>附加操作-使多个对象成为一个可编辑的整体（对象须先转换为可编辑多边形）</li><li>分离操作-将对象的一部分独立出来，注意分离时不要产生废点</li></ul><div class="note note-info">            <p>进行多边形编辑前确保已将编辑对象转换为了可编辑多边形</p>          </div><h2 id="建模思路和技巧"><a href="#建模思路和技巧" class="headerlink" title="建模思路和技巧"></a>建模思路和技巧</h2><h3 id="1-立体建模法"><a href="#1-立体建模法" class="headerlink" title="1.立体建模法"></a>1.立体建模法</h3><ul><li>建立平面模型</li><li>给模型添加厚度<ul><li>壳修改器-生成的为立方体（实心），可能产生废面，须手动清理</li><li>挤出修改器-挤出的为壳（空心）</li></ul></li></ul><h3 id="2-盒子建模法"><a href="#2-盒子建模法" class="headerlink" title="2.盒子建模法"></a>2.盒子建模法</h3><ul><li>以方盒子概括整体结构，确定各部位比例关系</li><li>用连接命令（边层级）确定各区域，使用分割命令将各区域分割开</li><li>使用封口命令（边界层级）闭合开口面</li><li>调整各部位的细节</li></ul><h3 id="3-解构建模法"><a href="#3-解构建模法" class="headerlink" title="3.解构建模法"></a>3.解构建模法</h3><ul><li>类似分治法，将模型逐步分解为各个小构件，最后拼接起来</li><li>灵活运用样条线建模、多边形建模等方法</li></ul>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的常用软件</title>
    <link href="/2021/08/22/Apps-on-my-computer/"/>
    <url>/2021/08/22/Apps-on-my-computer/</url>
    
    <content type="html"><![CDATA[<p>备注一下电脑上的常用软件，方便以后重新安装</p><span id="more"></span><h2 id="轻量级工具类软件"><a href="#轻量级工具类软件" class="headerlink" title="轻量级工具类软件"></a>轻量级工具类软件</h2><ol><li><a href="http://www.internetdownloadmanager.com/">IDM</a></li><li><a href="https://www.win-rar.com/">WinRAR</a></li><li><a href="https://www.microsoft.com/zh-cn/p/splash-unsplash-wallpaper/9phttwjgg81f#activetab=pivot:overviewtab">Splash!</a></li><li><a href="https://www.microsoft.com/zh-cn/p/snipaste/9p1wxpkb68kx?activetab=pivot:overviewtab">Snipaste</a></li><li><a href="https://www.microsoft.com/zh-cn/p/quicklook/9nv4bs3l1h4s?activetab=pivot:overviewtab">QuickLook</a></li><li><a href="https://u.tools/">uTools</a></li><li><a href="https://motrix.app/">Motrix</a></li><li><a href="https://www.typora.io/">Typora</a></li><li><a href="https://www.sublimetext.com/">Sublime Text</a></li><li><a href="https://www.iobit.com/en/iobit-unlocker.php#">IobitUnlocker</a></li><li><a href="https://github.com/zhongyang219/TrafficMonitor">TrafficMonitor</a></li><li><a href="https://github.com/Fndroid/clash_for_windows_pkg">Clash for windows</a></li><li><a href="https://github.com/BluePointLilac/ContextMenuManager">ContextMenuManager</a></li><li><a href="https://www.voidtools.com/zh-cn/">Everything</a></li></ol><h2 id="日常使用软件"><a href="#日常使用软件" class="headerlink" title="日常使用软件"></a>日常使用软件</h2><ol><li><a href="https://www.epicgames.com/store/zh-CN/">Epic</a></li><li><a href="https://store.steampowered.com/">Steam</a></li><li><a href="https://www.google.cn/chrome/">Chrome</a></li><li><a href="http://potplayer.daum.net/?lang=zh_CN">PotPlayer</a></li><li><a href="https://onedrive.live.com/">OneDrive</a></li><li><a href="https://office.qq.com/">Tim</a> &amp; <a href="https://weixin.qq.com/">WeChat</a></li><li><a href="https://pan.baidu.com/">百度网盘</a></li><li><a href="https://music.163.com/#/download">网易云音乐</a></li></ol><h2 id="高效工作软件"><a href="#高效工作软件" class="headerlink" title="高效工作软件"></a>高效工作软件</h2><ol><li><a href="https://www.endnote.com/">Endnote</a></li><li><a href="https://www.mendeley.com/">Mendeley</a></li><li><a href="http://www.inoteexpress.com/aegean/">NoteExpress</a></li><li><a href="https://www.office.com/">Office365</a></li><li><a href="https://www.adobe.com/cn/acrobat/pdf-reader.html">Acrobat</a></li><li><a href="https://zoom.us/">zoom</a></li><li><a href="https://cloud.tencent.com/act/event/tencentmeeting_free">腾讯会议</a></li></ol><h2 id="专业领域软件"><a href="#专业领域软件" class="headerlink" title="专业领域软件"></a>专业领域软件</h2><ol><li><a href="https://www.originlab.com/">Origin</a></li><li><a href="https://www.itascacg.com/software/PFC">PFC 6.0</a></li><li><a href="https://www.autodesk.com.cn/products/3ds-max/overview">3dsMax</a></li><li><a href="https://www.autodesk.com.cn/products/autocad/overview">AutoCAD</a></li><li><a href="https://www.image-line.com/">FL Studio</a></li><li><a href="https://www.adobe.com/cn/products/photoshop.html">Photoshop</a></li><li><a href="https://www.vmware.com/cn/products/workstation-pro.html">VMware Workstation Pro</a></li></ol><h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><ol><li><a href="https://www.jetbrains.com/idea/">IDEA</a></li><li><a href="https://www.jetbrains.com/pycharm/">PyCharm</a></li><li><a href="https://www.jetbrains.com/webstorm/">Webstorm</a></li><li><a href="https://my.visualstudio.com/Downloads">Visual Studio 2017</a></li><li><a href="https://dev.mysql.com/downloads/installer/">MySQL</a></li><li><a href="https://download.qt.io/archive/qt/5.12/">QT 5.12</a></li><li><a href="http://www.cburch.com/logisim/download.html">Logisim</a></li><li><a href="https://tomcat.apache.org/download-90.cgi">Tomcat 9</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用开发工具的安装及配置</title>
    <link href="/2021/08/22/Developer-tools-and-configuration/"/>
    <url>/2021/08/22/Developer-tools-and-configuration/</url>
    
    <content type="html"><![CDATA[<p>记录一下常用开发工具的安装和配置细节，省得每次重装系统后安装软件出点小问题都得百度来百度去的</p><span id="more"></span><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://nodejs.org/zh-cn/">node.js官网</a>下载安装，推荐下载长期支持（LTS）版本，配置好后用以下命令检测是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></div></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><ul><li>将<code>node.js</code>主目录添加到环境变量<code>path</code>中，安装时默认添加。</li><li>配置全局模块安装目录，默认在C盘用户目录的<code>AppData</code>文件夹下</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;[dest]\node_global_modules&quot;</span><br></code></pre></div></td></tr></table></figure><ul><li>配置包下载缓存目录，默认仍然在C盘用户目录<code>AppData</code>文件夹下</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;[dest]\node_cache&quot;</span><br></code></pre></div></td></tr></table></figure><ul><li>配置国内镜像源，加快包的下载速度</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry=http://registry.npm.taobao.org -g<br></code></pre></div></td></tr></table></figure><h2 id="3-可能出现的问题"><a href="#3-可能出现的问题" class="headerlink" title="3. 可能出现的问题"></a>3. 可能出现的问题</h2><p>若安装后命令不生效，可以重启电脑或者手动设置一遍环境变量</p><h2 id="4-安装GitBook"><a href="#4-安装GitBook" class="headerlink" title="4. 安装GitBook"></a>4. 安装<code>GitBook</code></h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install -g gitbook-cli<br></code></pre></div></td></tr></table></figure><p>运行以下命令检验是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">gitbook -V<br></code></pre></div></td></tr></table></figure><p>若此时卡在<code>installing GitBook 3.2.3</code>，并显示如下错误信息</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">gitbook-cli\node_modules\npm\node_modules\graceful-fs\polyfills.js:287:18<br>at FSReqCallback.oncomplete (fs.js:169:5)<br></code></pre></div></td></tr></table></figure><p>则原因为<code>gitbook-cli</code>引用了旧版的<code>graceful-fs</code>库，进入<code>gitbook-cli</code>全局安装目录下的<code>node</code>依赖文件夹<code>...\gitbook-cli\node_modules\npm\node_modules</code>，执行以下命令更新<code>graceful-fs</code>库即可。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install graceful-fs@latest --save<br></code></pre></div></td></tr></table></figure><div class="note note-info">            <p>若更新了<code>graceful-fs</code>库仍卡在<code>installing GitBook 3.2.3</code>，则可能是因为<code>GitBook</code>安装在了C盘的用户目录下，进入该目录下的对应文件夹按以上命令更新<code>graceful-fs</code>库即可。</p>          </div><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="1-安装-1"><a href="#1-安装-1" class="headerlink" title="1. 安装"></a>1. 安装</h2><p>在<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">Oracle官网</a>下载Java 1.8安装，安装的同时也会安装<code>jre</code>，1.8版本使用较广，兼容性比新版本好一点。</p><h2 id="2-配置-1"><a href="#2-配置-1" class="headerlink" title="2. 配置"></a>2. 配置</h2><ul><li>新建环境变量<code>JAVA_HOME</code>，值为<code>jdk</code>主目录的所在路径，一般为<code>...\jdk xx.xx.xx</code></li><li>将<code>jdk</code>主目录下的<code>bin</code>文件夹添加到环境变量<code>path</code>中</li></ul><h2 id="3-验证安装"><a href="#3-验证安装" class="headerlink" title="3. 验证安装"></a>3. 验证安装</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">java -v<br>javac -v<br></code></pre></div></td></tr></table></figure><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="1-安装-2"><a href="#1-安装-2" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://www.python.org/downloads/">python官网</a>下载安装</p><h2 id="2-配置-2"><a href="#2-配置-2" class="headerlink" title="2. 配置"></a>2. 配置</h2><ul><li><p>更改镜像源</p><p>更改<code>pip</code>命令的安装源为国内的镜像源，提高包的下载速度，在C盘的用户目录下新建文件夹<code>pip</code>，在其中新建文件<code>pip.ini</code>，写入以下内容</p></li></ul><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-section">[global]</span><br><span class="hljs-attr">timeout</span> = <span class="hljs-number">6000</span><br><span class="hljs-attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple<br><span class="hljs-comment"># &lt;==&gt; pip install -i [index-url] [pkg_name]</span><br><span class="hljs-section">[install]</span><br><span class="hljs-attr">trusted-host</span> = mirrors.aliyun.com<br></code></pre></div></td></tr></table></figure><h2 id="3-第三方库的导入和导出"><a href="#3-第三方库的导入和导出" class="headerlink" title="3. 第三方库的导入和导出"></a>3. 第三方库的导入和导出</h2><ul><li>导出</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pip freeze &gt; [path]\requirements.txt<br></code></pre></div></td></tr></table></figure><ul><li>导入</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pip install -r requirements.txt<br></code></pre></div></td></tr></table></figure><h2 id="4-pycrypto-模块安装"><a href="#4-pycrypto-模块安装" class="headerlink" title="4. pycrypto 模块安装"></a>4. pycrypto 模块安装</h2><ul><li><p>正常使用<code>pip</code>命令安装不上该模块时，可按以下步骤进行尝试</p></li><li><p>找到<code>VS</code>安装目录中<code>VC</code>文件夹下的<code>stdint.h</code>头文件，路径形式如下：</p></li></ul><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini">...\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\stdint.h<br></code></pre></div></td></tr></table></figure><ul><li>打开<code>cmd</code>进行如下设置（<code>path</code>即上一步中的<code>stdint.h</code>文件路径）：</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> CL=/FI<span class="hljs-string">&quot;[path]/stdint.h&quot;</span> %CL%<br></code></pre></div></td></tr></table></figure><ul><li>使用<code>pip</code>命令安装<code>pycrypto</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pip install pycrypto<br></code></pre></div></td></tr></table></figure><div class="note note-info">            <p>若命令<code>from Crypto.Cipher import AES</code>报错，可到<code>python</code>的包安装目录<code>site-packages</code>下将<code>crypto</code>文件夹首字母大写为<code>Crypto</code></p>          </div><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="1-安装-3"><a href="#1-安装-3" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://git-scm.com/download/win">Git官网</a>下载安装</p><h2 id="2-配置-3"><a href="#2-配置-3" class="headerlink" title="2. 配置"></a>2. 配置</h2><p>首先将<code>git</code>主目录添加到环境变量<code>path</code>中，然后设置全局用户名和邮箱，作为<code>git commit</code>的发起用户</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your github user name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your email account used in github&quot;</span><br></code></pre></div></td></tr></table></figure><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="1-安装-4"><a href="#1-安装-4" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://dev.mysql.com/downloads/installer/">MySQL官网</a>下载免费的社区安装版本，安装时推荐勾选<code>MySQL WorkBench</code>，作为数据库的图形化操作界面</p><h2 id="2-配置-4"><a href="#2-配置-4" class="headerlink" title="2. 配置"></a>2. 配置</h2><p>首次使用需要设置用户名和密码，使用<code>idea</code>等软件连接时确保<code>mysql</code>服务已经启动</p><h2 id="3-IDEA配置MySQL"><a href="#3-IDEA配置MySQL" class="headerlink" title="3. IDEA配置MySQL"></a>3. IDEA配置MySQL</h2><p>问题：<code>IEDA</code>中配置<code>MySQL</code>出现<code>Server returns invalid timezone. Go to &#39;Advanced&#39; tab and set &#39;serverTimezone&#39; property manually</code>报错</p><p>原因：<code>MySQL</code>驱动<code>jar</code>中的默认时区是<code>UTC</code>，其代表的是全球标准时间 ，但是我们使用的时间是北京时区-东八区，领先UTC八个小时，因为时区不一致，导致了该错误</p><p>解决方法有以下三个：</p><ul><li>在<code>Advanced</code>面板下将<code>serverTimezone</code>设置为<code>Asia/Shanghai</code></li><li>在连接数据库的<code>url</code>后面添加参数<code>?serverTimezone=UTC</code>，设置时区为<code>UTC</code></li><li>更改<code>MySQL</code>的配置文件<code>my.ini</code>如下：</li></ul><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">default-time_zone</span> = <span class="hljs-string">&#x27;+8:00&#x27;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用ssh连接Github</title>
    <link href="/2021/08/20/Connect-github-using-ssh-keys/"/>
    <url>/2021/08/20/Connect-github-using-ssh-keys/</url>
    
    <content type="html"><![CDATA[<p>使用<code>ssh</code>连接Github，解决命令行执行<code>git clone</code>等命令时报错的问题</p><span id="more"></span><h1 id="1-生成本地电脑和Github链接的SSH公钥"><a href="#1-生成本地电脑和Github链接的SSH公钥" class="headerlink" title="1. 生成本地电脑和Github链接的SSH公钥"></a>1. 生成本地电脑和Github链接的SSH公钥</h1><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your github user name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your email account used in github&quot;</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;your email account used in github&quot;</span><br></code></pre></div></td></tr></table></figure><h1 id="2-将本地电脑和GitHub连接"><a href="#2-将本地电脑和GitHub连接" class="headerlink" title="2. 将本地电脑和GitHub连接"></a>2. 将本地电脑和GitHub连接</h1><p>公钥保存在 <code>C:\Users\.ssh</code> 的文件夹下，打开<code>id_rsa.pub</code>文件，将里面的内容全部复制； 然后去GitHub的Settings，找到<code>SSH and GPG keys</code>的页面， 新建一个SSH Key，将刚才复制的内容粘贴到新建的SSH Key中并点击保存。</p><h1 id="3-验证结果"><a href="#3-验证结果" class="headerlink" title="3. 验证结果"></a>3. 验证结果</h1><ul><li>命令行输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git@github.com<br></code></pre></div></td></tr></table></figure><ul><li>若出现以下提示即连接成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">PTY allocation request failed on channel 0<br>Hi [your username]! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="hljs-string">Connection to github.com closed.</span><br></code></pre></div></td></tr></table></figure><div class="note note-info">            <p>若提示<code>The authenticity of host &#39;github.com (52.74.223.119)&#39; can&#39;t be established</code>，选择<code>yes</code>继续连接，此时会在<code>ssh</code>目录下生成<code>know_hosts</code>文件，再次检验则成功。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo框架的博客搭建</title>
    <link href="/2021/08/20/Hexo-Blog/"/>
    <url>/2021/08/20/Hexo-Blog/</url>
    
    <content type="html"><![CDATA[<p>搭建基于<code>hexo</code>框架的个人博客，并配合<code>fluid</code>主题进行博客的个性化设置</p><span id="more"></span><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1. 安装node.js"></a>1. 安装node.js</h2><p>到<a href="https://nodejs.org/zh-cn/">官网</a>下载<code>node.js</code>安装包并安装，命令行输入以下前两条命令检验是否安装成功，第三条命令会将镜像源改为国内的源，加快包的下载速度。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">node -v<br>npm -v<br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></div></td></tr></table></figure><h2 id="2-安装HEXO模块"><a href="#2-安装HEXO模块" class="headerlink" title="2. 安装HEXO模块"></a>2. 安装HEXO模块</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cnpm install -g hexo-cli<br>hexo -v<br></code></pre></div></td></tr></table></figure><h2 id="3-初始化博客"><a href="#3-初始化博客" class="headerlink" title="3. 初始化博客"></a>3. 初始化博客</h2><p>创建博客目录<code>user/hexo/blog/</code>，进入目录执行</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo init<br></code></pre></div></td></tr></table></figure><h2 id="4-启动博客"><a href="#4-启动博客" class="headerlink" title="4. 启动博客"></a>4. 启动博客</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo start<br></code></pre></div></td></tr></table></figure><h2 id="5-新建博文"><a href="#5-新建博文" class="headerlink" title="5. 新建博文"></a>5. 新建博文</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;My Blog&quot;</span><br></code></pre></div></td></tr></table></figure><p>​    在<code>./source/_posts/</code>下会生成<code>.md</code>文件，回到主目录执行以下命令更新内容</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean<br>hexo generate<br></code></pre></div></td></tr></table></figure><h2 id="6-将博客部署到GitHub-Page"><a href="#6-将博客部署到GitHub-Page" class="headerlink" title="6. 将博客部署到GitHub Page"></a>6. 将博客部署到GitHub Page</h2><ol><li>转到主目录安装部署插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cnpm install --save hexo-deployer-git<br></code></pre></div></td></tr></table></figure><ol start="2"><li>更改<code>_config.yml</code>配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/[username]/[username].github.io.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></div></td></tr></table></figure><ol start="3"><li>部署</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo deploy<br></code></pre></div></td></tr></table></figure><div class="note note-primary">            <p>需要事先在<code>Github</code>上创建一个名为<code>[username].github.io</code>的空仓库，<code>[username]</code>必须和自己的<code>Github</code>用户名一致</p>          </div><h2 id="7-个性化主题"><a href="#7-个性化主题" class="headerlink" title="7. 个性化主题"></a>7. 个性化主题</h2><ol><li>clone <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid主题</a>到博客目录下的主题文件夹中</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></div></td></tr></table></figure><ol start="2"><li>在博客配置文件<code>_config.yml</code>中配置新的主题</li></ol>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
