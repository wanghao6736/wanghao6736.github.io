<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>常用开发工具的安装及配置</title>
    <link href="/2021/08/22/Developer-tools-and-configuration/"/>
    <url>/2021/08/22/Developer-tools-and-configuration/</url>
    
    <content type="html"><![CDATA[<p>记录一下常用开发工具的安装和配置细节，省得每次重装系统出点小问题都得挨个百度一下。</p><span id="more"></span><h1 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://nodejs.org/zh-cn/">node.js官网</a>下载安装，推荐下载长期支持（LTS）版本，配置好后用以下命令检测是否安装成功</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">node</span> -v<br>npm -v<br></code></pre></div></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><ul><li>将<code>node.js</code>主目录添加到环境变量<code>path</code>中，安装时默认添加。</li><li>配置全局模块安装目录，默认在C盘用户目录的<code>AppData</code>文件夹下</li></ul><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">npm</span> config set prefix <span class="hljs-string">&quot;[dest]\node_global_modules&quot;</span><br></code></pre></div></td></tr></table></figure><ul><li>配置包下载缓存目录，默认仍然在C盘用户目录<code>AppData</code>文件夹下</li></ul><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">npm</span> config set cache <span class="hljs-string">&quot;[dest]\node_cache&quot;</span><br></code></pre></div></td></tr></table></figure><ul><li>配置国内镜像源，加快包的下载速度</li></ul><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">npm</span> config set registry=http://registry.npm.taobao.org -g<br></code></pre></div></td></tr></table></figure><h2 id="3-可能出现的问题"><a href="#3-可能出现的问题" class="headerlink" title="3. 可能出现的问题"></a>3. 可能出现的问题</h2><p>若安装后命令不生效，可以重启电脑或者手动设置一遍环境变量</p><h2 id="4-安装GitBook"><a href="#4-安装GitBook" class="headerlink" title="4. 安装GitBook"></a>4. 安装<code>GitBook</code></h2><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">npm</span> install -g gitbook-cli<br></code></pre></div></td></tr></table></figure><p>运行以下命令检验是否安装成功</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">gitbook</span> -V<br></code></pre></div></td></tr></table></figure><p>若此时卡在<code>installing GitBook 3.2.3</code>，并显示如下错误信息</p><figure class="highlight x86asm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs x86asm">gitbook-<span class="hljs-keyword">cli</span>\node_modules\npm\node_modules\graceful-<span class="hljs-built_in">fs</span>\polyfills<span class="hljs-number">.</span><span class="hljs-keyword">js</span>:<span class="hljs-number">287</span>:<span class="hljs-number">18</span><br><span class="hljs-meta">at</span> FSReqCallback<span class="hljs-number">.</span>oncomplete (<span class="hljs-built_in">fs</span><span class="hljs-number">.</span><span class="hljs-keyword">js</span>:<span class="hljs-number">169</span>:<span class="hljs-number">5</span>)<br></code></pre></div></td></tr></table></figure><p>则原因为<code>gitbook-cli</code>引用了旧版的<code>graceful-fs</code>库，进入<code>gitbook-cli</code>全局安装目录下的<code>node</code>依赖文件夹<code>...\gitbook-cli\node_modules\npm\node_modules</code>，执行以下命令更新<code>graceful-fs</code>库即可。</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">npm</span> install graceful-fs@latest --save<br></code></pre></div></td></tr></table></figure><div class="note note-info">            <p>若更新了<code>graceful-fs</code>库仍卡在<code>installing GitBook 3.2.3</code>，则可能是因为<code>GitBook</code>安装在了C盘的用户目录下，进入该目录下的对应文件夹按以上命令更新<code>graceful-fs</code>库即可。</p>          </div><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="1-安装-1"><a href="#1-安装-1" class="headerlink" title="1. 安装"></a>1. 安装</h2><p>在<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">Oracle官网</a>下载Java 1.8安装，安装的同时也会安装<code>jre</code>，1.8版本使用较广，兼容性比新版本好一点。</p><h2 id="2-配置-1"><a href="#2-配置-1" class="headerlink" title="2. 配置"></a>2. 配置</h2><ul><li>新建环境变量<code>JAVA_HOME</code>，值为<code>jdk</code>主目录的所在路径，一般为<code>...\jdk xx.xx.xx</code></li><li>将<code>jdk</code>主目录下的<code>bin</code>文件夹添加到环境变量<code>path</code>中</li></ul><h2 id="3-验证安装"><a href="#3-验证安装" class="headerlink" title="3. 验证安装"></a>3. 验证安装</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">java -v<br>javac -v<br></code></pre></div></td></tr></table></figure><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><h2 id="1-安装-2"><a href="#1-安装-2" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://www.python.org/downloads/">python官网</a>下载安装</p><h2 id="2-配置-2"><a href="#2-配置-2" class="headerlink" title="2. 配置"></a>2. 配置</h2><p>更改<code>pip</code>命令的安装源为国内的镜像源，提高包的下载速度，在C盘的用户目录下新建文件夹<code>pip</code>，在其中新建文件<code>pip.ini</code>，写入以下内容</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">[<span class="hljs-keyword">global</span>]<br>timeout = <span class="hljs-number">6000</span><br><span class="hljs-keyword">index</span>-url = https://pypi.tuna.tsinghua.edu.cn/simple<br>[install]<br><span class="hljs-keyword">trusted</span>-host = mirrors.aliyun.com<br></code></pre></div></td></tr></table></figure><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="1-安装-3"><a href="#1-安装-3" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://git-scm.com/download/win">Git官网</a>下载安装</p><h2 id="2-配置-3"><a href="#2-配置-3" class="headerlink" title="2. 配置"></a>2. 配置</h2><p>首先将<code>git</code>主目录添加到环境变量<code>path</code>中，然后设置全局用户名和邮箱，作为<code>git commit</code>的发起用户</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your github user name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your email account used in github&quot;</span><br></code></pre></div></td></tr></table></figure><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="1-安装-4"><a href="#1-安装-4" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><a href="https://dev.mysql.com/downloads/installer/">MySQL官网</a>下载免费的社区安装版本，安装时推荐勾选<code>MySQL WorkBench</code>，作为数据库的图形化操作界面</p><h2 id="2-配置-4"><a href="#2-配置-4" class="headerlink" title="2. 配置"></a>2. 配置</h2><p>首次使用需要设置用户名和密码，使用<code>idea</code>等软件连接时确保<code>mysql</code>服务已经启动</p>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用ssh连接Github</title>
    <link href="/2021/08/20/Connect-github-using-ssh-keys/"/>
    <url>/2021/08/20/Connect-github-using-ssh-keys/</url>
    
    <content type="html"><![CDATA[<p>使用<code>ssh</code>连接Github，解决命令行执行<code>git clone</code>等命令时报错的问题</p><span id="more"></span><h1 id="1-生成本地电脑和Github链接的SSH公钥"><a href="#1-生成本地电脑和Github链接的SSH公钥" class="headerlink" title="1. 生成本地电脑和Github链接的SSH公钥"></a>1. 生成本地电脑和Github链接的SSH公钥</h1><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your github user name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your email account used in github&quot;</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;your email account used in github&quot;</span><br></code></pre></div></td></tr></table></figure><h1 id="2-将本地电脑和GitHub连接"><a href="#2-将本地电脑和GitHub连接" class="headerlink" title="2. 将本地电脑和GitHub连接"></a>2. 将本地电脑和GitHub连接</h1><p>公钥保存在 <code>C:\Users\.ssh</code> 的文件夹下，打开<code>id_rsa.pub</code>文件，将里面的内容全部复制； 然后去GitHub的Settings，找到<code>SSH and GPG keys</code>的页面， 新建一个SSH Key，将刚才复制的内容粘贴到新建的SSH Key中并点击保存。</p><h1 id="3-验证结果"><a href="#3-验证结果" class="headerlink" title="3. 验证结果"></a>3. 验证结果</h1><ul><li>命令行输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git@github.com<br></code></pre></div></td></tr></table></figure><ul><li>若出现以下提示即连接成功</li></ul><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">PTY allocation request failed <span class="hljs-keyword">on</span> channel <span class="hljs-number">0</span><br>Hi [your username]! You&#x27;ve successfully authenticated, <span class="hljs-keyword">but</span> GitHub <span class="hljs-keyword">does</span> <span class="hljs-keyword">not</span> provide shell access.<br>Connection <span class="hljs-keyword">to</span> github.com closed.<br></code></pre></div></td></tr></table></figure><ul><li>若提示<code>The authenticity of host &#39;github.com (52.74.223.119)&#39; can&#39;t be established</code>，选择<code>yes</code>继续连接，此时会在<code>ssh</code>目录下生成<code>know_hosts</code>文件，再次检验则成功。</li></ul>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo框架的博客搭建</title>
    <link href="/2021/08/20/Hexo-Blog/"/>
    <url>/2021/08/20/Hexo-Blog/</url>
    
    <content type="html"><![CDATA[<p>搭建基于<code>hexo</code>框架的个人博客，并配合<code>hexo</code>主题进行博客的个性化设置</p><span id="more"></span><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1. 安装node.js"></a>1. 安装node.js</h2><p>到<a href="https://nodejs.org/zh-cn/">官网</a>下载<code>node.js</code>安装包并安装，命令行输入以下前两条命令检验是否安装成功，第三条命令会将镜像源改为国内的源，加快包的下载速度。</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">node</span> -v<br>npm -v<br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></div></td></tr></table></figure><h2 id="2-安装HEXO模块"><a href="#2-安装HEXO模块" class="headerlink" title="2. 安装HEXO模块"></a>2. 安装HEXO模块</h2><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">cnpm</span> install -g hexo-cli<br>hexo -v<br></code></pre></div></td></tr></table></figure><h2 id="3-初始化博客"><a href="#3-初始化博客" class="headerlink" title="3. 初始化博客"></a>3. 初始化博客</h2><p>创建博客目录<code>user/hexo/blog/</code>，进入目录执行</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> init<br></code></pre></div></td></tr></table></figure><h2 id="4-启动博客"><a href="#4-启动博客" class="headerlink" title="4. 启动博客"></a>4. 启动博客</h2><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> start<br></code></pre></div></td></tr></table></figure><h2 id="5-新建博文"><a href="#5-新建博文" class="headerlink" title="5. 新建博文"></a>5. 新建博文</h2><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> new <span class="hljs-string">&quot;My Blog&quot;</span><br></code></pre></div></td></tr></table></figure><p>​    在<code>./source/_posts/</code>下会生成<code>.md</code>文件，回到主目录执行以下命令更新内容</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> clean<br>hexo generate<br></code></pre></div></td></tr></table></figure><h2 id="6-将博客部署到GitHub"><a href="#6-将博客部署到GitHub" class="headerlink" title="6. 将博客部署到GitHub"></a>6. 将博客部署到GitHub</h2><ol><li>转到主目录安装部署插件</li></ol><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">cnpm</span> install --save hexo-deployer-git<br></code></pre></div></td></tr></table></figure><ol start="2"><li>更改<code>_config.yml</code>配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/[username]/[username].github.io.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></div></td></tr></table></figure><ol start="3"><li>部署</li></ol><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> deploy<br></code></pre></div></td></tr></table></figure><h2 id="7-个性化主题"><a href="#7-个性化主题" class="headerlink" title="7. 个性化主题"></a>7. 个性化主题</h2><ol><li>clone<a href="https://github.com/fluid-dev/hexo-theme-fluid">主题</a>到本地</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></div></td></tr></table></figure><ol start="2"><li>在博客配置文件<code>_config.yml</code>中配置新的主题</li></ol>]]></content>
    
    
    <categories>
      
      <category>计科</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
